name: Survival Prediction - CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (without Git LFS)
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Set up Python
        uses: actions/setup-python@v5 
        with:
          python-version: '3.12' 

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pytest and pytest-mock should ideally be in your requirements.txt
          # If not, you can install them here:
          # pip install pytest pytest-mock httpx

      - name: Download Models from S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          S3_BUCKET_NAME: "model-bucket-rfs"
        run: |
          mkdir -p ./models
          aws s3 cp s3://model-bucket-rfs/rsf_model.pkl ./models/rsf_model.pkl
          aws s3 cp s3://model-bucket-rfs/scaler.joblib ./models/scaler.joblib
          aws s3 cp s3://model-bucket-rfs/gender_encoder.joblib ./models/gender_encoder.joblib
          aws s3 cp s3://model-bucket-rfs/smoker_encoder.joblib ./models/smoker_encoder.joblib
          echo "Models downloaded from S3."
          ls -lh ./models

      - name: Run Pytest
        run: pytest tests/ -v

  deploy-to-k8s:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker build -t sahithaitha02/home-assignment-survivalprediction:latest .
          docker push sahithaitha02/home-assignment-survivalprediction:latest

      - name: Setup Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}

      - name: Deploy to Kubernetes
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
